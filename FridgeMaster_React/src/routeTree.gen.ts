/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardShoppingListRouteImport } from './routes/dashboard/shopping-list'
import { Route as DashboardContainerIdRouteImport } from './routes/dashboard/container/$id'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardShoppingListRoute = DashboardShoppingListRouteImport.update({
  id: '/shopping-list',
  path: '/shopping-list',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardContainerIdRoute = DashboardContainerIdRouteImport.update({
  id: '/container/$id',
  path: '/container/$id',
  getParentRoute: () => DashboardRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/dashboard/shopping-list': typeof DashboardShoppingListRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/container/$id': typeof DashboardContainerIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/dashboard/shopping-list': typeof DashboardShoppingListRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/container/$id': typeof DashboardContainerIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/dashboard/shopping-list': typeof DashboardShoppingListRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/container/$id': typeof DashboardContainerIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/about'
    | '/login'
    | '/register'
    | '/dashboard/shopping-list'
    | '/dashboard/'
    | '/dashboard/container/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/register'
    | '/dashboard/shopping-list'
    | '/dashboard'
    | '/dashboard/container/$id'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/about'
    | '/login'
    | '/register'
    | '/dashboard/shopping-list'
    | '/dashboard/'
    | '/dashboard/container/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/shopping-list': {
      id: '/dashboard/shopping-list'
      path: '/shopping-list'
      fullPath: '/dashboard/shopping-list'
      preLoaderRoute: typeof DashboardShoppingListRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/container/$id': {
      id: '/dashboard/container/$id'
      path: '/container/$id'
      fullPath: '/dashboard/container/$id'
      preLoaderRoute: typeof DashboardContainerIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/dashboard/route' {
  const createFileRoute: CreateFileRoute<
    '/dashboard',
    FileRoutesByPath['/dashboard']['parentRoute'],
    FileRoutesByPath['/dashboard']['id'],
    FileRoutesByPath['/dashboard']['path'],
    FileRoutesByPath['/dashboard']['fullPath']
  >
}
declare module './routes/about' {
  const createFileRoute: CreateFileRoute<
    '/about',
    FileRoutesByPath['/about']['parentRoute'],
    FileRoutesByPath['/about']['id'],
    FileRoutesByPath['/about']['path'],
    FileRoutesByPath['/about']['fullPath']
  >
}
declare module './routes/login' {
  const createFileRoute: CreateFileRoute<
    '/login',
    FileRoutesByPath['/login']['parentRoute'],
    FileRoutesByPath['/login']['id'],
    FileRoutesByPath['/login']['path'],
    FileRoutesByPath['/login']['fullPath']
  >
}
declare module './routes/register' {
  const createFileRoute: CreateFileRoute<
    '/register',
    FileRoutesByPath['/register']['parentRoute'],
    FileRoutesByPath['/register']['id'],
    FileRoutesByPath['/register']['path'],
    FileRoutesByPath['/register']['fullPath']
  >
}
declare module './routes/dashboard/shopping-list' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/shopping-list',
    FileRoutesByPath['/dashboard/shopping-list']['parentRoute'],
    FileRoutesByPath['/dashboard/shopping-list']['id'],
    FileRoutesByPath['/dashboard/shopping-list']['path'],
    FileRoutesByPath['/dashboard/shopping-list']['fullPath']
  >
}
declare module './routes/dashboard/index' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/',
    FileRoutesByPath['/dashboard/']['parentRoute'],
    FileRoutesByPath['/dashboard/']['id'],
    FileRoutesByPath['/dashboard/']['path'],
    FileRoutesByPath['/dashboard/']['fullPath']
  >
}
declare module './routes/dashboard/container/$id' {
  const createFileRoute: CreateFileRoute<
    '/dashboard/container/$id',
    FileRoutesByPath['/dashboard/container/$id']['parentRoute'],
    FileRoutesByPath['/dashboard/container/$id']['id'],
    FileRoutesByPath['/dashboard/container/$id']['path'],
    FileRoutesByPath['/dashboard/container/$id']['fullPath']
  >
}

interface DashboardRouteRouteChildren {
  DashboardShoppingListRoute: typeof DashboardShoppingListRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardContainerIdRoute: typeof DashboardContainerIdRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardShoppingListRoute: DashboardShoppingListRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardContainerIdRoute: DashboardContainerIdRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
